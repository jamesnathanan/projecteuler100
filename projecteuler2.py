''' Even Fibonacci numbers
   
Problem 2

Each new term in the Fibonacci sequence is generated by adding the previous 
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed 
four million, find the sum of the even-valued terms.
'''

def my_method(limit):
  flist = [0,1] 
  # fibonacci 0 and 1 equal 0 and 1, pre append the list to prevent index error
  fib_num = 0 
  i = 1 # iteration by limit
  while fib_num <= limit:
    fib_num = flist[i-1] + flist[i] # recursive method of fibonacci
    flist.append(fib_num)
    i += 1
  flist_even = [j for j in flist if j%2==0] # list comprehension for even numbers
  
  return flist_even

print(my_method(4000000))
print(sum(my_method(4000000))) # answer is 4613732